function e(e){return e&&e.__esModule?e.default:e}var r="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{},t={},o={},s=r.parcelRequired7c6;null==s&&((s=function(e){if(e in t)return t[e].exports;if(e in o){var r=o[e];delete o[e];var s={id:e,exports:{}};return t[e]=s,r.call(s.exports,s,s.exports),s.exports}var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}).register=function(e,r){o[e]=r},r.parcelRequired7c6=s);var n=s("7Y9D8");const i=document.querySelector(".form"),l=i.querySelector('[name="delay"]'),a=i.querySelector('[name="step"]'),u=i.querySelector('[name="amount"]');function c(e,r){return new Promise(((t,o)=>{setTimeout((()=>{Math.random()>.3?t({position:e,delay:r,success:!0}):o({position:e,delay:r,success:!1})}),r)}))}i.addEventListener("submit",(async r=>{r.preventDefault();const t=parseInt(l.value),o=parseInt(a.value),s=parseInt(u.value);if(isNaN(t)||isNaN(o)||isNaN(s)||t<0||o<0||s<0)return void e(n).Notify.failure("Invalid input. Please enter positive numbers.");const i=[];for(let e=1;e<=s;e++){const r=c(e,t+o*(e-1));i.push(r)}try{const r=(await Promise.all(i)).filter((e=>e.success)),t=r[r.length-1],o=t?t.delay:0;e(n).Notify.success(`Successfully resolved ${r.length} promises. Last promise resolved in ${o}ms.`)}catch(r){console.error(r),e(n).Notify.failure("Failed to resolve promises.")}}));
//# sourceMappingURL=03-promises.7db82020.js.map
